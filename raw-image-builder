#! /bin/bash

if [ ! "$SOLUTION" ]; then
	echo "Solution unspecified!" >&2
	echo "Please set the SOLUTION environment variable!" >&2
	exit 1
fi

if [ ! "$DEVICE_NAME" ]; then
	echo "Device name unspecified!" >&2
	echo "Please set the DEVICE_NAME environment variable!" >&2
	exit 1
fi

if [ ! -e solutions/"$SOLUTION" ]; then
	echo "Cannot find solution file!" >&2
	exit 1
fi

source solutions/"$SOLUTION"

mkdir -p out aux_log

image_name="${DEVICE_NAME}_${SOLUTION}_$(date -u +%F)${IMAGE_NAME_EXTRA}"

apt-get install ${DEPENDENCIES} -y > aux_log/"${image_name}".log

dd if=/dev/zero of=out/"${image_name}".img bs=1M count="${IMAGE_TOTAL_SIZE}"

fdisk out/"${image_name}".img << EOF
$(if (("$TRIPLE_PARTITION")); then
	echo "n"
	echo "p" # Partition type p-Primary e-Extended
	echo "1" # Partition number (1-4, default 1)
	echo # First sector (2048-65535, default 2048)
	echo "+${FIRST_PARTITION_SIZE}M" # Last sector, +sectors or +size{K,M,G,T,P} (2048-xxxxx, default xxxxx)
	echo "n"
	echo "p"
	echo "2"
	echo
	echo "+${SECOND_PARTITION_SIZE}M"
	echo "n"
	echo "p"
	echo "3"
	echo
	echo
elif (("$DUAL_PARTITION")); then
	echo "n"
	echo "p" # Partition type p-Primary e-Extended
	echo "1" # Partition number (1-4, default 1)
	echo # First sector (2048-65535, default 2048)
	echo "+${FIRST_PARTITION_SIZE}M" # Last sector, +sectors or +size{K,M,G,T,P} (2048-xxxxx, default xxxxx)
	echo "n"
	echo "p"
	echo "2"
	echo
	echo
else
	echo "n"
	echo "p"
	echo "1"
	echo
	echo
fi
)

${EXTRA_FDISK_COMMANDS}

w
EOF

loop_device=$(losetup -f)
losetup -P -v "${loop_device}" out/"${image_name}".img

if [ "$FIRST_PARTITION_TYPE" ]; then
	"mkfs.${FIRST_PARTITION_TYPE}" "${loop_device}"p1
fi
if [ "$SECOND_PARTITION_TYPE" ]; then
	"mkfs.${SECOND_PARTITION_TYPE}" "${loop_device}"p2
fi
if [ "$THIRD_PARTITION_TYPE" ]; then
	"mkfs.${THIRD_PARTITION_TYPE}" "${loop_device}"p3
fi

# This environment variables are passed to do_fill_image
export IMAGE="$(readlink -e out/${image_name}.img)"
export IMAGE_DEVICE="${loop_device}"

temp_dir=$(mktemp -d)
umonut_fail=0
pushd "$temp_dir"
	if [ "$FIRST_PARTITION_TYPE" ]; then
		mkdir p1
		if [ "$FIRST_PARTITION_MOUNT_OPTIONS" ]; then
			mount -o "$FIRST_PARTITION_MOUNT_OPTIONS" "${loop_device}"p1 p1
		else
			mount "${loop_device}"p1 p1
		fi
	fi
	if [ "$SECOND_PARTITION_TYPE" ]; then
		mkdir p2
		if [ "$SECOND_PARTITION_MOUNT_OPTIONS" ]; then
			mount -o "$SECOND_PARTITION_MOUNT_OPTIONS" "${loop_device}"p2 p2
		else
			mount "${loop_device}"p2 p2
		fi
	fi
	if [ "$THIRD_PARTITION_TYPE" ]; then
		mkdir p3
		if [ "$THIRD_PARTITION_MOUNT_OPTIONS" ]; then
			mount -o "$THIRD_PARTITION_MOUNT_OPTIONS" "${loop_device}"p3 p3
		else
			mount "${loop_device}"p3 p3
		fi
	fi
	do_fill_image
	if [ -d p1 ]; then
		umount p1 || umonut_fail=1
	fi
	if [ -d p2 ]; then
		umount p2 || umonut_fail=1
	fi
	if [ -d p3 ]; then
		umount p3 || umonut_fail=1
	fi
popd

if ! ((umount_fail)); then
	rm -r "${temp_dir}"
else
	echo "WARNING: umount failed" >&2
fi

losetup -d "$loop_device"
