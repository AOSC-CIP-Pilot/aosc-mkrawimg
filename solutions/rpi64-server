#!/bin/bash
IMAGE_TOTAL_SIZE=7200

FIRST_PARTITION_TYPE=vfat
SECOND_PARTITION_TYPE=ext4

DEPENDENCIES="arch-chroot qemu-user-static"

case $DEVICE_NAME in
	"rpi-3b")
		FULL_DEVICE_NAME="Raspberry Pi 3 Model B"
		;;
	"rpi-cm3")
		FULL_DEVICE_NAME="Raspberry Pi Compute Module 3"
		;;
	"rpi-4b")
		FULL_DEVICE_NAME="Raspberry Pi 4 Model B"
		;;
	"rpi-400")
		FULL_DEVICE_NAME="Raspberry Pi 400"
		;;
	"rpi-cm4")
		FULL_DEVICE_NAME="Raspberry Pi Compute Module 4"
		;;
	*)
		echo "[-] Unsupported device: $DEVICE_NAME"
		return 1
		;;
esac

function GDISK_COMMANDS() {
	echo "[+] Partitioning disk..."
	case "$DEVICE_NAME" in
		"rpi-3b"|"rpi-cm3")
			echo "[+] Using MBR partition table."
			echo -e "label: dos\nstart=2048,type=0c,bootable,size=200MiB,\ntype=83," | sfdisk $1
			;;
		*)
			echo "[+] Using GPT partition table."
			echo -e "label: gpt\nstart=2048,type=uefi,size=200MiB,\ntype=linux," | sfdisk $1
			;;
	esac
}

# Note: needs a TARBALL environment variable

do_fill_image() {
	pushd p2
		echo "[+] Unpacking system distribution ..."
		tar xfpa "${TARBALL}" --strip-components=1

		# Generate fstab
		echo "[+] Generating fstab..."
		BOOT_PARTUUID="$(lsblk -no PARTUUID ${IMAGE_DEVICE}p1)"
		ROOT_PARTUUID="$(lsblk -no PARTUUID ${IMAGE_DEVICE}p2)"
		
		echo -e "PARTUUID=${ROOT_PARTUUID}\t/\text4\trw,relatime\t0 1" >> etc/fstab
		echo -e "PARTUUID=${BOOT_PARTUUID}\t/boot/rpi\tvfat\trw,relatime,fmask=0022,dmask=0022,codepage=437,iocharset=iso8859-1,shortname=mixed,utf8,errors=remount-ro \t0 2" >> etc/fstab

		echo "[+] Generating aosc-arm.conf ..."
		echo "DEVICE_NAME=$DEVICE_NAME" > etc/aosc-arm.conf
		echo "FULL_DEVICE_NAME=$FULL_DEVICE_NAME" >> etc/aosc-arm.conf
	popd
	echo "[+] Chrooting to target OS to perform post-installation actions..."
	cat > p2/rpi64-postinst.bash << EOF
#!/bin/bash

set -e

echo "[+] We are inside chroot now!"
echo "[+] Mounting /boot/rpi"
mkdir -p /boot/rpi
mount "${IMAGE_DEVICE}p1" /boot/rpi

# Install BSPs
echo "[+] Adding BSP repository and installing BSP packages..."
cat /etc/apt/sources.list | grep '^deb' | sed -e 's/main/bsp-rpi/g' | tee /etc/apt/sources.list.d/bsp-rpi.list

apt update
apt install -y linux+kernel+rpi64+lts

sync

echo "[+] Unmounting /boot/rpi..."
umount /boot/rpi || umount /boot/rpi
echo "[+] Target OS setup done!"
EOF

	# Hope arch-chroot will bind-mount /run to the target.
	arch-chroot ./p2 bash /rpi64-postinst.bash
	rm p2/rpi64-postinst.bash
	echo "[+] Done."
}
