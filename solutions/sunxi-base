#!/bin/bash
IMAGE_TOTAL_SIZE=2048
DUAL_PARTITION=1
FIRST_PARTITION_SIZE=128

FIRST_PARTITION_TYPE=vfat
SECOND_PARTITION_TYPE=btrfs
SECOND_PARTITION_MOUNT_OPTIONS="compress=zstd"

DEPENDENCIES="uboot-tools wget"

# Note: needs a TARBALL environment variable

if [ ! "$MMC" ] || [ "$MMC" = "0" ]; then
	MMC=0 # SD Card
	IMAGE_NAME_EXTRA="_sd"
elif [ "$MMC" = "2" ]; then
	IMAGE_NAME_EXTRA="_emmc"
else
	echo "Wrong MMC variable"
	exit 1
fi

do_fill_image() {
	if [ "$(echo $DEVICE_NAME | cut -c 1-5)" = "sun4i" ] || [ "$(echo $DEVICE_NAME | cut -c 1-5)" = "sun5i" ]; then
		kernel_variant=nokvm
	else
		kernel_variant=kvm
	fi
	pushd p2
		tar xfpa "${TARBALL}"
		mkdir -p etc/
		echo "/dev/mmcblk${MMC}p2 / btrfs compress=zstd,ssd 1 1" >> etc/fstab
		echo "DEVICE_NAME=$DEVICE_NAME" > etc/aosc-arm.conf
		echo "FLASHER_SOLUTION=sunxi" >> etc/aosc-arm.conf
		echo "SUNXI_FIRMWARE_DEVICE=/dev/mmcblk${MMC}" >> etc/aosc-arm.conf
		echo "SUNXI_KERNEL_DEVICE=/dev/mmcblk${MMC}p1" >> etc/aosc-arm.conf
		# The following is for cyanberry-config.
		touch .rootfs-repartition
		mkdir -p etc/systemd/system/multi-user.target.wants
		ln -sfv ../../../lib/systemd/system/rootfs-grow.service etc/systemd/system/multi-user.target.wants/
		# For u-boot-aosc-utils
		mkdir -p etc/default
		if [ "$MMC" = "2" ]; then
			wget https://github.com/AOSC-Dev/u-boot-aosc-utils/raw/584ede55ce34300d2b3cb4adb587e87bc28e0aff/presets/sunxi-mmc2 -O etc/default/u-boot
		else
			wget https://github.com/AOSC-Dev/u-boot-aosc-utils/raw/584ede55ce34300d2b3cb4adb587e87bc28e0aff/presets/sunxi -O etc/default/u-boot
		fi
		chroot "$PWD" useradd aosc -m
		chroot "$PWD" usermod -a -G audio,cdrom,video,wheel aosc
		echo 'aosc:anthon' | chpasswd -R "$PWD"
	popd
	pushd p1
		cp ../p2/usr/lib/aosc-os-armel-sunxi-boot/linux-sunxi-${kernel_variant}/zImage .
		cp ../p2/usr/lib/aosc-os-armel-sunxi-boot/dtb-${DEVICE_NAME}/dtb.dtb .
		cat > boot.cmd << EOF
setenv bootargs console=ttyS0,115200 panic=5 console=ttyUSB0 console=tty0 rootwait root=/dev/mmcblk${MMC}p2 earlyprintk rw${EXTRA_BOOTARGS}
load mmc \${mmc_bootdev}:1 0x43000000 dtb.dtb
load mmc \${mmc_bootdev}:1 0x42000000 zImage
bootz 0x42000000 - 0x43000000
EOF
		mkimage -C none -A arm -T script -d boot.cmd boot.scr
	popd
	dd if="p2/usr/lib/aosc-os-armel-sunxi-boot/u-boot-${DEVICE_NAME}/u-boot-sunxi-with-spl.bin" of="${IMAGE_DEVICE}" bs=1024 seek=8
}
